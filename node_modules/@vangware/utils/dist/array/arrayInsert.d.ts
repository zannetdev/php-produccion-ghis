/**
 * Takes an `index` and an `item` and makes a copy of given `source` array with
 * that new `item` in the given `index`.
 *
 * @example
 * ```typescript
 * const insertLast = arrayInsert(Infinity);
 * const insertFirst = arrayInsert(0);
 * const insertValueLast = insertLast("value");
 * const insertValueFirst = insertFirst("value");
 *
 * insertValueLast([0, 1, 2, 3]); // [0, 1, 2, 3, "value"]
 * insertValueFirst([0, 1, 2, 3]); // ["value", 0, 1, 2, 3]
 * ```
 * @param index Index to insert item.
 * @returns Curried function with `index` in context.
 */
export declare const arrayInsert: (
	index: number,
) => <Item>(
	item: Item,
) => <SourceItem = Item>(
	source: readonly SourceItem[],
) => (Item | SourceItem)[];
