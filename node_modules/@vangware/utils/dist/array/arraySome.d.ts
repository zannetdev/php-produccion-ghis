import type { Filterer } from "../types/Filterer.js";
/**
 * Curried wrapper for `Array.prototype.some`.
 *
 * @example
 * ```typescript
 * const someNumber = arraySome(isNumber);
 * someNumber([0, 1, 2]); // true
 * someNumber([0, 1, "foo", 2]); // true
 * someNumber(["foo", "bar"]); // false
 * ```
 * @template Item Type of items in source array.
 * @template Predicated Type of predicated items.
 * @param predicate Function predicate to test until some item of the type.
 * @returns Curried function with `predicate` in context.
 */
export declare const arraySome: <Item, Predicated extends Item>(
	predicate: Filterer<Item, Predicated>,
) => (source: readonly Item[]) => source is readonly (Item | Predicated)[];
