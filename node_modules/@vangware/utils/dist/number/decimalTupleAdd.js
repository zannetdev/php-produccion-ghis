import { decimalTupleToNumber } from "./decimalTupleToNumber.js";
/**
 * Takes a `addend1` and `addend2` and returns the addition of those values.
 *
 * @example
 * ```typescript
 * const addPoint1 = decimalTupleAdd([1, -1]);
 *
 * addPoint1([2, -1]); // [3, -1] -> 0.3
 * ```
 * @param addend2 Second addend `DecimalTuple` of the addition.
 * @returns Curried function with `addend1` set in context.
 */
export const decimalTupleAdd =
	addend2 =>
	/**
	 * @param addend1 Fist addend `DecimalTuple` of the addition.
	 * @returns DecimalTuple with the result of `addend1` + `addend2`.
	 */
	addend1 => {
		const [[minCoefficient, minExponent], [maxCoefficient, maxExponent]] =
			addend1[1] < addend2[1] ? [addend1, addend2] : [addend2, addend1];
		return [
			decimalTupleToNumber([maxCoefficient, maxExponent - minExponent]) +
				minCoefficient,
			minExponent,
		];
	};
