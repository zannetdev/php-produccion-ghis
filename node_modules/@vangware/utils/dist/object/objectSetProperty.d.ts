/**
 * Set value of given property in given source object.
 *
 * @example
 * ```typescript
 * const setFoo = objectSet("foo")("bar");
 * setFoo({ foo: 1 }); // { foo: "bar" }
 * setFoo({ bar: 1 }); // { bar: 1, foo: "bar" }
 * ```
 * @template Property Type of the property.
 * @param property Name of property.
 * @returns Curried function with `property` in context.
 */
export declare const objectSetProperty: <
	Property extends string | number | symbol,
>(
	property: Property,
) => <Value>(
	value: Value,
) => <Source extends Record<string | number | symbol, unknown>>(
	source: Source,
) => Omit<Source, Property> & { readonly [P in Property]: Value };
